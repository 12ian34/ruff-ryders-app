rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return isSignedIn() && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
    
    // Allow read access to all authenticated users for common collections
    match /{document=**} {
      allow read: if isSignedIn();
    }

    // User rules
    match /users/{userId} {
      allow create: if isSignedIn() && request.auth.uid == userId;
      allow read: if isSignedIn();
      allow update: if isAdmin() || request.auth.uid == userId;
    }
    
    // Player rules
    match /players/{playerId} {
      allow read: if isSignedIn();
      allow write: if isAdmin();
    }
    
    // Tournament rules
    match /tournaments/{tournamentId} {
      allow read: if isSignedIn();
      allow write: if isAdmin();
      
      match /games/{gameId} {
        allow read: if isSignedIn();
        allow write: if isAdmin() || (
          isSignedIn() && (
            resource.data.usaPlayerId == request.auth.uid ||
            resource.data.europePlayerId == request.auth.uid
          )
        );
      }
    }

    // Config rules
    match /config/{configId} {
      allow read: if isSignedIn();
      allow write: if isAdmin();
    }

    // Blog rules
    match /blog-posts/{postId} {
      allow read: if isSignedIn();
      allow create: if isAdmin();
      allow update: if isAdmin() && request.auth.uid == resource.data.authorId;
      allow delete: if isAdmin() && request.auth.uid == resource.data.authorId;
    }
  }
}